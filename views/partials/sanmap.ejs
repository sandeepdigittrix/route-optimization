<style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
            width: 100%;
            overflow: hidden;
            height: 762px;
            margin: -16px 0 0 0;
            max-width: 1763px !important;
        }
      #floating-panel {
        position: absolute;
        top: 10px;
        left: 25%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
      }
      #warnings-panel {
        width: 100%;
        height:10%;
        text-align: center;
      }
    </style>
<input type="hidden" id="address_arr" value="<%=address_arr%>">

<div id="san_modellll" class="modal fade" role="dialog">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Alert</h4>
      </div>
      <div class="modal-body">
        <p>Vehicle Not Available At The Moment!</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>

  </div>
</div>

<div id="san_export" class="modal fade" role="dialog">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Export</h4>
      </div>
      <div class="modal-body">
        <p>Order Data Exported!</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>

  </div>
</div>
    <div class="content">
                <div class="container-fluid">
                    <div class="row">
                    <div class="col-lg-12 col-md-12">
                    <input type="hidden" id="send_btn" value="<%=display_send_btn %>">
                                <div class="card-header" data-background-color="orange">
                                    <h4 class="title">Orders</h4><div id="assign_div"><form action="/admin/assign_vehicle" class="assn_veh_id" id="assign" method="get">
                                    <input type="hidden" value="" name="order_ids" class="order_ids">
                                    <div style="float:right;margin-top: -54px;"><button type="submit" class="btn btn-info btn-lg" id="assign_vehicles">Assign Vehicles</button></div></form></div>
                                    <div class="send_divv">
                                    <form action="/admin/send_orders" class="assn_veh_id" id="send" method="get">
                                    <input type="hidden" value="" name="order_ids" class="order_ids">
                                    <div style="float:right;margin-top: -54px;"><button type="submit" class="btn btn-info btn-lg" id="assign_vehicles">Transfer To Detrack</button></div></form></div>
                                    <div class="send_divv">
                                    <form action="/admin/clear_all_assigns" id="clear" method="get">
                                    <div style="float:right;margin-top: -54px;"><button type="submit" class="btn btn-info btn-lg">Clear Assigns</button></div></form></div>
                                    <div class="send_divv">
                                    <form action="/admin/export_ro_csv" id="export_to_csv" method="get">
                                    <input type="hidden" value="" name="order_ids" class="order_ids">
                                    <div style="float:right;margin-top: -54px;"><button type="submit" class="btn btn-info btn-lg">Export</button></div></form></div>
                                    <!-- <p class="category">New employees on 15th September, 2016</p> -->
                                </div>
                            <div class="card card-nav-tabs">
                                <div class="card-header" data-background-color="purple">
                                    <div class="nav-tabs-navigation">
                                        <div class="nav-tabs-wrapper">
                                            <span class="nav-tabs-title">Orders:</span>
                                            <ul class="nav nav-tabs" data-tabs="tabs">
                                            <li>Select All
                                                    <input type="checkbox" id="san_select_all">
                                                </li>
                                                <li class="active">
                                                    <a href="#profile" data-toggle="tab">
                                                        <i class="material-icons">bookmark_border</i> Tomorrow's Order
                                                        <div class="ripple-container"></div>
                                                    </a>
                                                </li>
                                                <li class="">
                                                    <a href="#settings" data-toggle="tab">
                                                        <i class="material-icons">reorder</i> Coming Orders
                                                        <div class="ripple-container"></div>
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-content">
                                    <div class="tab-content" style="height: 500px;overflow: auto;">
                                        <div class="tab-pane active" id="profile">
                                            <table class="table">
                                            <thead class="text-warning">
                                            <th>Select<br><input type="checkbox" class="san_select_all"></th>
                                            <th>Order Id</th>
                                            <th>Date</th>
                                            <th>Customer Name</th>
                                            <th>Customer Mobile</th>
                                            <th>Address</th>
                                            <th>Assign To</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </thead>
                                                <tbody>
                                                <% today_orders.forEach(function(delevery) { %>
                                            <tr>
                                                <td><input type="checkbox" class="san_select" data-id="<%= delevery.assign_to %>" value="<%= delevery.Id[0] %>"></td>
                                                <td><%= delevery.Id[0] %></td>
                                                <td><%= delevery.Date %></td>
                                                <td><%= delevery.BussinessName %></td>
                                                <td><%= delevery.MobileNumber %></td>
                                                <td><%= delevery.address %></td>
                                                <td><%= delevery.assign_to %></td>
                                                <td><%= delevery.Delivered %></td>
                                                <td><%if (delevery.assign_to) { %> <button type="button" data-id="<%= delevery.Id[0] %>" class="btn btn-sm san_unassign">Unassign</button><% }else{ %><form action="/admin/assign_single_vehicle" id="assign_<%= delevery.Id[0] %>" method="get">
                                    <input type="hidden" value="<%= delevery.Id[0] %>" name="order_id"><input type="hidden" value="" id="san_lat<%= delevery.Id[0] %>" name="san_lat"><input type="hidden" value="" id="san_lng<%= delevery.Id[0] %>" name="san_lng"><input type="hidden" value="" id="san_address<%= delevery.Id[0] %>" name="san_address"><input type="hidden" value="" id="san_color<%= delevery.Id[0] %>" name="san_color"><select class="form-control san_bangarh_vehicle" name="veh_name" data-title="<%= delevery.Id[0] %>">
                                                  <option value = "" disabled selected>Select Vehicle</option>
                                                  <% vehicles.forEach(function(type) { %>
                                                  <option data-id="<%= type.lat %>san@#ban<%= type.lng %>san@#ban<%= type.address %>san@#ban<%= type.color %>" value = "<%= type.name %>"><%= type.name %></option>
                                                  <% }); %>
                                               </select></form><% } %>
</td>
                                            </tr>
    <% }); %>
                                                   
                                                    
                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="tab-pane" id="settings">
                                            <table class="table">
                                            <thead class="text-warning">
                                            <th>Select<br><input type="checkbox" class="san_select_all"></th>
                                            <th>Order Id</th>
                                            <th>Date</th>
                                            <th>Customer Name</th>
                                            <th>Customer Mobile</th>
                                            <th>Address</th>
                                            <th>Assign To</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </thead>
                                                <tbody>
                                                <% coming_orders.forEach(function(delevery) { %>
                                            <tr>
                                                <td><input type="checkbox" class="" data-id="<%= delevery.assign_to %>" value="<%= delevery.Id[0] %>"></td>
                                                <td><%= delevery.Id[0] %></td>
                                                <td><%= delevery.Date %></td>
                                                <td><%= delevery.BussinessName %></td>
                                                <td><%= delevery.MobileNumber %></td>
                                                <td><%= delevery.address %></td>
                                                <td><%= delevery.assign_to %></td>
                                                <td><%= delevery.Delivered %></td>
                                                <td><%if (delevery.assign_to) { %> <button type="button" data-id="<%= delevery.Id[0] %>" class="btn btn-sm san_unassign">Unassign</button> <% }else{ %><form action="/admin/assign_single_vehicle" id="assign_<%= delevery.Id[0] %>" method="get">
                                    <input type="hidden" value="<%= delevery.Id[0] %>" name="order_id"><input type="hidden" value="" id="san_lat<%= delevery.Id[0] %>" name="san_lat"><input type="hidden" value="" id="san_lng<%= delevery.Id[0] %>" name="san_lng"><input type="hidden" value="" id="san_address<%= delevery.Id[0] %>" name="san_address"><input type="hidden" value="" id="san_color<%= delevery.Id[0] %>" name="san_color"><select class="form-control san_bangarh_vehicle" name="veh_name" data-title="<%= delevery.Id[0] %>">
                                                  <option value = "" disabled selected>Select Vehicle</option>
                                                  <% vehicles.forEach(function(type) { %>
                                                  <option data-id="<%= type.lat %>san@#ban<%= type.lng %>san@#ban<%= type.address %>" value = "<%= type.name %>"><%= type.name %></option>
                                                  <% }); %>
                                               </select></form><% } %></td>
                                            </tr>
    <% }); %>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                    <div class="col-lg-12 col-md-12">
                        <div id="map"></div>
                        <div id="right-panel">
                          <p>Total Distance: <span id="total"></span></p>
                          <p><span id="assigning_in_pro"></span></p>
                        </div>
                    <div>
                    </div>
                </div>
            </div>
            <script type="text/javascript">
    $(document).ready(function() {
        if('<%=san_available%>'){
            $('#san_modellll').modal();
        }

        if('<%=exportdata%>'){
            $('#san_export').modal();
        }

        //if('<%=invalid_addr%>'){
        //    $('#san_modellll').modal();
        ///}

        


        var send_btn = $('#send_btn').val();
        if(send_btn ==0){
            $('.send_divv').hide();
        } 
        var orderids = [];
        $('#san_select_all').click(function() {
            if ($(this).is(':checked')) {
                $('.san_select').attr('checked', true);
                $( ".san_select" ).each(function( index ) {
                  orderids.push($(this).val());
                });
                
            } else {
                $('.san_select').attr('checked', false);
                orderids = [];
            }
            $(".order_ids").val(orderids);
        });

        $('.san_select').click(function() {
            var crnt = $(this).val();
                if ($(this).is(':checked')) {
                    orderids.push(crnt);
                } else {
                    orderids = jQuery.grep(orderids, function(value) {
                      return value != crnt;
                    });
                }
                $(".order_ids").val(orderids);
        });

        $('.san_unassign').click(function() {
            var orderid = $(this).data('id');
            $.ajax({
                type:'POST',
                url:'./clear_assigns',
                data: { orderid:orderid },
                dataType:'json'
            }).done(function(data){
                window.location.href="./home";
            }).fail(function(jqXHR,textStatus, err){
                console.log(textStatus);
            });
        });

        

        $('.assn_veh_id').click(function() {
            var ids = $(".order_ids").val();
            //var type = $(this).attr('id');
            //var assigned = $(this).data('id');
            //if(type == 'assign'){
            //    if(assigned){
            //        alert('Already Assigned!');
            //        return false;
            //    }
            //}
            if(!ids){
                alert('Please select Orders');
               return false;
            }
            $('#san_loading').fadeOut();
        });

        $('#export_to_csv').click(function() {
            var ids = $(".order_ids").val();
            //var type = $(this).attr('id');
            //var assigned = $(this).data('id');
            //if(type == 'assign'){
            //    if(assigned){
            //        alert('Already Assigned!');
            //        return false;
            //    }
            //}
            if(!ids){
                alert('Please select Orders');
               return false;
            }
            $('#san_loading').fadeOut();
        });

        $('.san_bangarh_vehicle').change(function() {
            var id = $(this).data('title');
            var latlng = $(this).find(':selected').data('id');
            var lrtlngarr =latlng.split('san@#ban');
            $("#san_lat"+id).val(lrtlngarr[0]);
            $("#san_lng"+id).val(lrtlngarr[1]);
            $("#san_address"+id).val(lrtlngarr[2]);
            $("#san_color"+id).val(lrtlngarr[3]);
            $('#assign_'+id).submit();
        });

        
    });
    var vehicles = [];
    var distances = [];
//waypoints: [{location: 'Sector 17, Chandigarh'}],
      function displayRoute(origin, destination, service, display, map,start,end,bounds,color,wayponits,customers,cus_cnt) { 
          if(wayponits.length > 0 ){
                service.route({
                  origin: origin,
                  destination: destination,
                  waypoints: wayponits,
                  //optimizeWaypoints: true,
                  travelMode: 'DRIVING'
                }, function(response, status) {
                  if (status === 'OK') { 
                      var dirDisplay = new google.maps.DirectionsRenderer({
                         draggable: true,
                         map: map,
                         suppressMarkers : true,
                         polylineOptions: {
                           strokeColor: color
                         }
                      });
                      //dirDisplay.addListener('directions_changed', function() {
                      //  computeTotalDistance(dirDisplay.getDirections());
                     // });
                      dirDisplay.setDirections(response);
                      //var pointsArray = response.routes[0].overview_path;
                      var legs = response.routes[ 0 ].legs;
                      if(vehicles.indexOf(start) == -1){
                        createMarker(legs[0].start_location, start+'(Vehicle)',map,bounds,'','');
                        vehicles.push(start);
                      }
                     var markerCounter = cus_cnt;
                     for (var i = 0; i < legs.length; i++) {
                          var orlat = legs[i].end_location.lat();
                          var orlng = legs[i].end_location.lng();
                         //for(var j=0;j<customers.length;j++){
                           //if(customers[j].Latitude == orlat){
                                //var bname = customers[j].BussinessName || customers[j].CafeName;
                                createMarker(legs[i].end_location, legs[i].end_address,map,bounds,markerCounter++,color);
                           //}
                         //}
                     }
                     
                  } else {
                        
                  }
                });
          }
      }

      function sanGetWayPoints(request,map,start,id,origin,dest){
             var service = new google.maps.places.PlacesService(map);
              service.getDetails(request, function(place, status) {
                if (status == google.maps.places.PlacesServiceStatus.OK) {
                    $.ajax({
                        type:'POST',
                        url:'./save_routes',
                        data: { orderid:id, start:origin,end:dest,veh_name:start},
                        dataType:'json'
                    }).done(function(data){
                        //window.location.href="./home";
                    }).fail(function(jqXHR,textStatus, err){
                        console.log(textStatus);
                    });
                }
              });
      }

      function computeTotalDistance(result) {
        var total = 0;
        var myroute = result.routes[0];
        for (var i = 0; i < myroute.legs.length; i++) {
          total += myroute.legs[i].distance.value;
        }
        total = total / 1000;
        document.getElementById('total').innerHTML = total + ' km';
      }

       function colourNameToHex(colour)
        {
            var colours = {"aliceblue":"#f0f8ff","antiquewhite":"#faebd7","aqua":"#00ffff","aquamarine":"#7fffd4","azure":"#f0ffff",
            "beige":"#f5f5dc","bisque":"#ffe4c4","black":"#000000","blanchedalmond":"#ffebcd","blue":"#0000ff","blueviolet":"#8a2be2","brown":"#a52a2a","burlywood":"#deb887",
            "cadetblue":"#5f9ea0","chartreuse":"#7fff00","chocolate":"#d2691e","coral":"#ff7f50","cornflowerblue":"#6495ed","cornsilk":"#fff8dc","crimson":"#dc143c","cyan":"#00ffff",
            "darkblue":"#00008b","darkcyan":"#008b8b","darkgoldenrod":"#b8860b","darkgray":"#a9a9a9","darkgreen":"#006400","darkkhaki":"#bdb76b","darkmagenta":"#8b008b","darkolivegreen":"#556b2f",
            "darkorange":"#ff8c00","darkorchid":"#9932cc","darkred":"#8b0000","darksalmon":"#e9967a","darkseagreen":"#8fbc8f","darkslateblue":"#483d8b","darkslategray":"#2f4f4f","darkturquoise":"#00ced1",
            "darkviolet":"#9400d3","deeppink":"#ff1493","deepskyblue":"#00bfff","dimgray":"#696969","dodgerblue":"#1e90ff",
            "firebrick":"#b22222","floralwhite":"#fffaf0","forestgreen":"#228b22","fuchsia":"#ff00ff",
            "gainsboro":"#dcdcdc","ghostwhite":"#f8f8ff","gold":"#ffd700","goldenrod":"#daa520","gray":"#808080","green":"#008000","greenyellow":"#adff2f",
            "honeydew":"#f0fff0","hotpink":"#ff69b4",
            "indianred ":"#cd5c5c","indigo":"#4b0082","ivory":"#fffff0","khaki":"#f0e68c",
            "lavender":"#e6e6fa","lavenderblush":"#fff0f5","lawngreen":"#7cfc00","lemonchiffon":"#fffacd","lightblue":"#add8e6","lightcoral":"#f08080","lightcyan":"#e0ffff","lightgoldenrodyellow":"#fafad2",
            "lightgrey":"#d3d3d3","lightgreen":"#90ee90","lightpink":"#ffb6c1","lightsalmon":"#ffa07a","lightseagreen":"#20b2aa","lightskyblue":"#87cefa","lightslategray":"#778899","lightsteelblue":"#b0c4de",
            "lightyellow":"#ffffe0","lime":"#00ff00","limegreen":"#32cd32","linen":"#faf0e6",
            "magenta":"#ff00ff","maroon":"#800000","mediumaquamarine":"#66cdaa","mediumblue":"#0000cd","mediumorchid":"#ba55d3","mediumpurple":"#9370d8","mediumseagreen":"#3cb371","mediumslateblue":"#7b68ee",
            "mediumspringgreen":"#00fa9a","mediumturquoise":"#48d1cc","mediumvioletred":"#c71585","midnightblue":"#191970","mintcream":"#f5fffa","mistyrose":"#ffe4e1","moccasin":"#ffe4b5",
            "navajowhite":"#ffdead","navy":"#000080",
            "oldlace":"#fdf5e6","olive":"#808000","olivedrab":"#6b8e23","orange":"#ffa500","orangered":"#ff4500","orchid":"#da70d6",
            "palegoldenrod":"#eee8aa","palegreen":"#98fb98","paleturquoise":"#afeeee","palevioletred":"#d87093","papayawhip":"#ffefd5","peachpuff":"#ffdab9","peru":"#cd853f","pink":"#ffc0cb","plum":"#dda0dd","powderblue":"#b0e0e6","purple":"#800080",
            "rebeccapurple":"#663399","red":"#ff0000","rosybrown":"#bc8f8f","royalblue":"#4169e1",
            "saddlebrown":"#8b4513","salmon":"#fa8072","sandybrown":"#f4a460","seagreen":"#2e8b57","seashell":"#fff5ee","sienna":"#a0522d","silver":"#c0c0c0","skyblue":"#87ceeb","slateblue":"#6a5acd","slategray":"#708090","snow":"#fffafa","springgreen":"#00ff7f","steelblue":"#4682b4",
            "tan":"#d2b48c","teal":"#008080","thistle":"#d8bfd8","tomato":"#ff6347","turquoise":"#40e0d0",
            "violet":"#ee82ee",
            "wheat":"#f5deb3","white":"#ffffff","whitesmoke":"#f5f5f5",
            "yellow":"#ffff00","yellowgreen":"#9acd32"};

            if (typeof colours[colour.toLowerCase()] != 'undefined')
                return colours[colour.toLowerCase()].toUpperCase();

            return false;
        }

      function initMap() {

       var ltng_arr = JSON.parse($("#address_arr").val());
                var map = new google.maps.Map(document.getElementById('map'), {
              zoom: 4,
              center: {lat: -31.9804702280387, lng: 115.797693925086},  // India.
              travelMode: google.maps.TravelMode.DRIVING
            });

             var directionsService = new google.maps.DirectionsService;
            var directionsDisplay = new google.maps.DirectionsRenderer({
              draggable: true,
              map: map,
              panel: document.getElementById('right-panel')
            });
            var jsonarray = [];
            var vehicless = [];
            var groups = {};
            for (var i = 0; i < ltng_arr.length; i++) {
              var groupName = ltng_arr[i].assign_to;
              if($.trim(groupName)){
                  if (!groups[$.trim(groupName)]) {
                    groups[groupName] = [];
                  }
                  groups[groupName].push(ltng_arr[i]);
              }
            }


    var stops = [
                        {"Geometry":{"Latitude":52.1615470947258,"Longitude":20.80514430999756}},
                        {"Geometry":{"Latitude":52.15991486090931,"Longitude":20.804049968719482}},
                        {"Geometry":{"Latitude":52.15772967999426,"Longitude":20.805788040161133}},
                        {"Geometry":{"Latitude":52.15586034371232,"Longitude":20.80460786819458}},
                        {"Geometry":{"Latitude":52.15923693975469,"Longitude":20.80113172531128}},
                        {"Geometry":{"Latitude":52.159849043774074, "Longitude":20.791990756988525}},
                        {"Geometry":{"Latitude":52.15986220720892,"Longitude":20.790467262268066}},
                        {"Geometry":{"Latitude":52.16202095784738,"Longitude":20.7806396484375}},
                        {"Geometry":{"Latitude":52.16088894313116,"Longitude":20.77737808227539}},
                        {"Geometry":{"Latitude":52.15255590234335,"Longitude":20.784244537353516}},
                        {"Geometry":{"Latitude":52.14747369312591,"Longitude":20.791218280792236}},
                        {"Geometry":{"Latitude":52.14963304460396,"Longitude":20.79387903213501}}



                    ] ;

    var map = new window.google.maps.Map(document.getElementById("map"));

    // new up complex objects before passing them around
    var directionsDisplay = new window.google.maps.DirectionsRenderer({suppressMarkers: true});
    var directionsService = new window.google.maps.DirectionsService();

    Tour_startUp(stops);

    window.tour.loadMap(map, directionsDisplay);
    window.tour.fitBounds(map);

    if (stops.length > 1)
        window.tour.calcRoute(directionsService, directionsDisplay);
}

function Tour_startUp(stops) {
    if (!window.tour) window.tour = {
        updateStops: function (newStops) {
            stops = newStops;
        },
        // map: google map object
        // directionsDisplay: google directionsDisplay object (comes in empty)
        loadMap: function (map, directionsDisplay) {
            var myOptions = {
                zoom: 13,
                center: new window.google.maps.LatLng(51.507937, -0.076188), // default to London
                mapTypeId: window.google.maps.MapTypeId.ROADMAP
            };
            map.setOptions(myOptions);
            directionsDisplay.setMap(map);
        },
        fitBounds: function (map) {
            var bounds = new window.google.maps.LatLngBounds();

            // extend bounds for each record
            jQuery.each(stops, function (key, val) {
                var myLatlng = new window.google.maps.LatLng(val.Geometry.Latitude, val.Geometry.Longitude);
                bounds.extend(myLatlng);
            });
            map.fitBounds(bounds);
        },
        calcRoute: function (directionsService, directionsDisplay) {
            var batches = [];
            var itemsPerBatch = 10; // google API max = 10 - 1 start, 1 stop, and 8 waypoints
            var itemsCounter = 0;
            var wayptsExist = stops.length > 0;

            while (wayptsExist) {
                var subBatch = [];
                var subitemsCounter = 0;

                for (var j = itemsCounter; j < stops.length; j++) {
                    subitemsCounter++;
                    subBatch.push({
                        location: new window.google.maps.LatLng(stops[j].Geometry.Latitude, stops[j].Geometry.Longitude),
                        stopover: true
                    });
                    if (subitemsCounter == itemsPerBatch)
                        break;
                }

                itemsCounter += subitemsCounter;
                batches.push(subBatch);
                wayptsExist = itemsCounter < stops.length;
                // If it runs again there are still points. Minus 1 before continuing to
                // start up with end of previous tour leg
                itemsCounter--;
            }

            // now we should have a 2 dimensional array with a list of a list of waypoints
            var combinedResults;
            var unsortedResults = [{}]; // to hold the counter and the results themselves as they come back, to later sort
            var directionsResultsReturned = 0;
            for (var k = 0; k < batches.length; k++) {
                var lastIndex = batches[k].length - 1;
                var start = batches[k][0].location;
                var end = batches[k][lastIndex].location;

                // trim first and last entry from array
                var waypts = [];
                waypts = batches[k];
                waypts.splice(0, 1);
                waypts.splice(waypts.length - 1, 1);

                var request = {
                    origin: start,
                    destination: end,
                    waypoints: waypts,
                    travelMode: window.google.maps.TravelMode.WALKING
                };
                (function (kk) {
                    directionsService.route(request, function (result, status) {
                        if (status == window.google.maps.DirectionsStatus.OK) {

                            var unsortedResult = { order: kk, result: result };
                            unsortedResults.push(unsortedResult);

                            directionsResultsReturned++;

                            if (directionsResultsReturned == batches.length) // we've received all the results. put to map
                            {
                                // sort the returned values into their correct order
                                unsortedResults.sort(function (a, b) { return parseFloat(a.order) - parseFloat(b.order); });
                                var count = 0;
                                for (var key in unsortedResults) {
                                    if (unsortedResults[key].result != null) {
                                        if (unsortedResults.hasOwnProperty(key)) {
                                            if (count == 0) // first results. new up the combinedResults object
                                                combinedResults = unsortedResults[key].result;
                                            else {
                                                // only building up legs, overview_path, and bounds in my consolidated object. This is not a complete
                                                // directionResults object, but enough to draw a path on the map, which is all I need
                                                combinedResults.routes[0].legs = combinedResults.routes[0].legs.concat(unsortedResults[key].result.routes[0].legs);
                                                combinedResults.routes[0].overview_path = combinedResults.routes[0].overview_path.concat(unsortedResults[key].result.routes[0].overview_path);

                                                combinedResults.routes[0].bounds = combinedResults.routes[0].bounds.extend(unsortedResults[key].result.routes[0].bounds.getNorthEast());
                                                combinedResults.routes[0].bounds = combinedResults.routes[0].bounds.extend(unsortedResults[key].result.routes[0].bounds.getSouthWest());
                                            }
                                            count++;
                                        }
                                    }
                                }
                                directionsDisplay.setDirections(combinedResults);
                                var legs = combinedResults.routes[0].legs;
                                // alert(legs.length);
                                for (var i=0; i < legs.length;i++){
                  var markerletter = "A".charCodeAt(0);
                  markerletter += i;
                                  markerletter = String.fromCharCode(markerletter);
                                  createMarker(directionsDisplay.getMap(),legs[i].start_location,"marker"+i,"some text for marker "+i+"<br>"+legs[i].start_address,markerletter);
                                }
                                var i=legs.length;
                                var markerletter = "A".charCodeAt(0);
                    markerletter += i;
                                markerletter = String.fromCharCode(markerletter);
                                createMarker(directionsDisplay.getMap(),legs[legs.length-1].end_location,"marker"+i,"some text for the "+i+"marker<br>"+legs[legs.length-1].end_address,markerletter);
                            }
                        }
                    });
                })(k);
            }
        }
    };
}
var infowindow = new google.maps.InfoWindow(
  { 
    size: new google.maps.Size(150,50)
  });

var icons = new Array();
icons["red"] = new google.maps.MarkerImage("mapIcons/marker_red.png",
      // This marker is 20 pixels wide by 34 pixels tall.
      new google.maps.Size(20, 34),
      // The origin for this image is 0,0.
      new google.maps.Point(0,0),
      // The anchor for this image is at 9,34.
      new google.maps.Point(9, 34));



function getMarkerImage(iconStr) {
   if ((typeof(iconStr)=="undefined") || (iconStr==null)) { 
      iconStr = "red"; 
   }
   if (!icons[iconStr]) {
      icons[iconStr] = new google.maps.MarkerImage("http://www.google.com/mapfiles/marker"+ iconStr +".png",
      // This marker is 20 pixels wide by 34 pixels tall.
      new google.maps.Size(20, 34),
      // The origin for this image is 0,0.
      new google.maps.Point(0,0),
      // The anchor for this image is at 6,20.
      new google.maps.Point(9, 34));
   } 
   return icons[iconStr];

}
  // Marker sizes are expressed as a Size of X,Y
  // where the origin of the image (0,0) is located
  // in the top left of the image.
 
  // Origins, anchor positions and coordinates of the marker
  // increase in the X direction to the right and in
  // the Y direction down.

  var iconImage = new google.maps.MarkerImage('mapIcons/marker_red.png',
      // This marker is 20 pixels wide by 34 pixels tall.
      new google.maps.Size(20, 34),
      // The origin for this image is 0,0.
      new google.maps.Point(0,0),
      // The anchor for this image is at 9,34.
      new google.maps.Point(9, 34));
  var iconShadow = new google.maps.MarkerImage('http://www.google.com/mapfiles/shadow50.png',
      // The shadow image is larger in the horizontal dimension
      // while the position and offset are the same as for the main image.
      new google.maps.Size(37, 34),
      new google.maps.Point(0,0),
      new google.maps.Point(9, 34));
      // Shapes define the clickable region of the icon.
      // The type defines an HTML &lt;area&gt; element 'poly' which
      // traces out a polygon as a series of X,Y points. The final
      // coordinate closes the poly by connecting to the first
      // coordinate.
  var iconShape = {
      coord: [9,0,6,1,4,2,2,4,0,8,0,12,1,14,2,16,5,19,7,23,8,26,9,30,9,34,11,34,11,30,12,26,13,24,14,21,16,18,18,16,20,12,20,8,18,4,16,2,15,1,13,0],
      type: 'poly'
  };


function createMarker(map, latlng, label, html, color) {
// alert("createMarker("+latlng+","+label+","+html+","+color+")");
    var contentString = '<b>'+label+'</b><br>'+html;
    var marker = new google.maps.Marker({
        position: latlng,
        map: map,
        shadow: iconShadow,
        icon: getMarkerImage(color),
        shape: iconShape,
        title: label,
        zIndex: Math.round(latlng.lat()*-100000)<<5
        });
        marker.myname = label;

    google.maps.event.addListener(marker, 'click', function() {
        infowindow.setContent(contentString); 
        infowindow.open(map,marker);
        });
    return marker;
}
    </script>

            